<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>流程图</title>
    <!--[if lt IE 9]>
    <?import namespace="v" implementation="#default#VML" ?>
    <script src="{{projcfg.appurl}}/static/{{projcfg.theme}}js/jquery-1.11.0.js"></script>
    <![endif]-->
    <link rel="stylesheet" type="text/css" href="{{projcfg.appurl}}/static/js/easyui/themes/default/easyui.css">
    <link rel="stylesheet" type="text/css" href="{{projcfg.appurl}}/static/js/easyui/themes/icon.css">
    <script src="{{projcfg.appurl}}/static/bpm/js/jquery.min.js"></script>
    <script type="text/javascript" src="{{projcfg.appurl}}/static/js/easyui/jquery.easyui.min.js"></script>
    <script type="text/javascript" src="{{projcfg.appurl}}/static/js/easyui/locale/easyui-lang-zh_CN.js"></script>

    <link rel="stylesheet" type="text/css" href="{{projcfg.appurl}}/static/bpm/css/GooFlow.css"/>
    <script type="text/javascript" src="{{projcfg.appurl}}/static/bpm/js/GooFunc.js"></script>
    <script type="text/javascript" src="{{projcfg.appurl}}/static/bpm/js/json2.js"></script>
    <link rel="stylesheet" type="text/css" href="{{projcfg.appurl}}/static/bpm/css/default.css"/>
    <script type="text/javascript" src="{{projcfg.appurl}}/static/bpm/js/GooFlow.js"></script>
    <script>
        var processDefineDiv;

        function initGooFlow(){
            processDefineDiv = $.createGooFlow({
                dom: $('#processDefineDiv'),
                width: $('#layout').layout('panel','center').panel('options').width-10,
                height: $('#layout').layout('panel','center').panel('options').height-10,
                useOperStack: false,
                haveTool:false
            });
        }

        function initProcChatPage(){
            var proc_inst_id = decodeURI(GetQueryString("proc_inst_id"),"UTF-8");
            var status = decodeURI(GetQueryString("proc_inst_status"),"UTF-8");
            if(!proc_inst_id || !status){
                return {'success':false,'msg':'参数不能为空'};
            }else{
                return {'success':true,'data':{proc_inst_id:proc_inst_id,proc_inst_status:status}};
            }
        }

        function GetQueryString(name) {
            var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
            var r = window.location.search.substr(1).match(reg);
            if(r!=null)
                return  unescape(r[2]);
            return null;
        }

        $(function($){

            initGooFlow();
            var params = initProcChatPage();
            if(!params.success){
                $.messager.alert('提示','参数不能为空','error');
                return;
            }else{
                var data;
                var proc_inst_id = params.data.proc_inst_id;
                data = {proc_inst_id:proc_inst_id};
                $.ajax({
                    url: '{{projcfg.appurl}}/api/process/show/process',
                    type: 'get',
                    async:false,
                    data:data,
                    success: function (data) {
//                        console.info(data.data)
                        if(data.success) {
                            var results=data.data;
                            var processChart = results.proc_define;
                            processDefineDiv.loadData(JSON.parse(processChart));
                            processDefineDiv.$editable = false;
                            var taskNodes = processDefineDiv.$nodeData;
                            var taskLines=processDefineDiv.$lineData;
                            var node_array=results.node_array;
                            var line_array=results.line_array;
                            var last_node=results.last_node;
                            for(var k in taskNodes){
                                for(var i in node_array){
                                    if(k ==node_array[i]){
                                        if(node_array[i]==last_node){
                                            processDefineDiv.markItem(node_array[i],"node",true,true);
                                        }else{

                                            processDefineDiv.markItem(node_array[i],"node",true,false);
                                        }

                                    }
                                }
                            }

                            for (var j in taskLines){
                                for(var  l in line_array){
                                    if(j==line_array[l]){
                                        console.log(j);
                                     processDefineDiv.markItem(j.toString(),'line',true,false);
                                    }
                                }
                            }
                        }else{
                            $.messager.alert('提示',data.msg+',错误代码:'+data.code,'error');
                        }
                    }
                });
                var proc_inst_status = params.data.proc_inst_status;
                handlerLogs(proc_inst_id,proc_inst_status);
            }
        });

        function handlerLogs(inst_id,status){
            // 加载流程基本属性列表
            $('#handlerLogsDataTable').datagrid({
                url:'{{projcfg.appurl}}/api/process/handler/logs',
                method:'get',
                queryParams:{proc_inst_id:inst_id,proc_inst_status:status},
                rownumbers:true,
                striped:true,
                fitColumns:true,
                border:false,
                fit:true,
                singleSelect:true,
                selectOnCheck:true,
                checkOnSelect:true,
                columns:[[
                    {"field":"_id",hidden:true},
                    {"field": "proc_inst_task_name","title":"处理节点","width":100
                    },
                    {"field": "proc_inst_task_remark","title":"处理内容","width":200},
                    {"field": "proc_inst_task_assignee_name","title":"处理人员","width":100},
                    {"field": "proc_inst_task_handle_time","title":"处理时间","width":120,formatter:function(value,row,index){
                        return new Date(value).format();
                    }}
                ]],
                onLoadSuccess:function(json) {
                    if(!json.success) {
                        msgError(json.msg + ',错误代码:' + json.code);
                    }
                },
                onLoadError:function() {
                    msgError('加载数据出现时发生错误,请稍候重试...');
                },
                pagination:true,
                loadMsg:'正在加载...'
            });
        }


        /**
         * @author ZhaoJing
         * 扩展javaScriptDate类型工具js
         * 实现格式化日期功能
         */
        Date.prototype.format = function(format){
            if(isNaN(this.getMonth())){
                return '';
            }
            if(!format){
                format = 'yyyy-MM-dd hh:mm:ss';
            }
            var o = {
                //month
                "M+" : this.getMonth() + 1,
                //day
                "d+" : this.getDate(),
                //hour
                "h+" : this.getHours(),
                //minute
                "m+" : this.getMinutes(),
                //second
                "s+" : this.getSeconds(),
                //quarter
                "q+" : Math.floor((this.getMonth() + 3) / 3),
                //millisecond
                "s" : this.getMilliseconds()
            };
            if(/(y+)/.test(format)){
                format = format.replace(RegExp.$1,(this.getFullYear() + "").substr(4 - RegExp.$1.length));
            }
            for(var k in o){
                if(new RegExp("(" + k + ")").test(format)){
                    format = format.replace(RegExp.$1,RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
                }
            }
            return format;
        };

    </script>
</head>
<body id="layout" class="easyui-layout" data-options="fit:true">
    <div data-options="region:'center',title:'流程进度'" style="overflow: scroll">
        <div id="processDefineDiv"></div>
    </div>
    <div data-options="region:'east',title:'处理日志',width:'50%',collapsible:false">
        <table id="handlerLogsDataTable"></table>
    </div>
</body>
</html>
